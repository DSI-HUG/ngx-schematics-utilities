"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[144],{3791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=n(1085),r=n(1184);const a={title:"Request"},o=void 0,i={id:"apis/request",title:"Request",description:"Helpers",source:"@site/docs/apis/request.md",sourceDirName:"apis",slug:"/apis/request",permalink:"/ngx-schematics-utilities/apis/request",draft:!1,unlisted:!1,editUrl:"https://github.com/dsi-hug/ngx-schematics-utilities/edit/main/docs/docs/apis/request.md",tags:[],version:"current",frontMatter:{title:"Request"},sidebar:"docs",previous:{title:"Package.json",permalink:"/ngx-schematics-utilities/apis/package-json"}},c={},l=[{value:"Helpers",id:"helpers",level:2},{value:"<code>getDataFromUrl</code>",id:"getdatafromurl",level:3},{value:"<code>getJsonFromUrl</code>",id:"getjsonfromurl",level:3}];function u(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"helpers",children:"Helpers"}),"\n",(0,s.jsx)(t.h3,{id:"getdatafromurl",children:(0,s.jsx)(t.code,{children:"getDataFromUrl"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the response data of a given url as a buffer object."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:"{8}",children:"import { getDataFromUrl, schematic, rule } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    rule((): Rule => {\n      const url = 'https://my-data-source-url';\n      const data = await getDataFromUrl(url);\n      ...\n    })\n  ]);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getjsonfromurl",children:(0,s.jsx)(t.code,{children:"getJsonFromUrl"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the response data of a given url as a JSON object."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:"{8}",children:"import { getJsonFromUrl, schematic, rule } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    rule((): Rule => {\n      const url = 'https://cdn.jsdelivr.net/npm/@angular/core@latest/package.json';\n      const packageJson = await getJsonFromUrl(url);\n      ...\n    })\n  ]);\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(4041);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);