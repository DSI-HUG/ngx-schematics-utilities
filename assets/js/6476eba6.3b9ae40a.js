"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[827],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(a),u=i,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return a?n.createElement(h,o(o({ref:t},l),{},{components:a})):n.createElement(h,o({ref:t},l))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2175:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const r={title:"Usage"},o=void 0,s={unversionedId:"usage",id:"usage",title:"Usage",description:"Each api rules can be used in a chainable or individual way.",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/ngx-schematics-utilities/usage",draft:!1,editUrl:"https://github.com/DSI-HUG/ngx-schematics-utilities/edit/main/docs/docs/usage.md",tags:[],version:"current",frontMatter:{title:"Usage"},sidebar:"docs",previous:{title:"Installation",permalink:"/ngx-schematics-utilities/"},next:{title:"Core",permalink:"/ngx-schematics-utilities/apis/core"}},c={},p=[{value:"Chainable usage",id:"chainable-usage",level:3},{value:"<code>Workspace</code>",id:"workspace",level:4},{value:"<code>Application</code>",id:"application",level:4},{value:"<code>Library</code>",id:"library",level:4},{value:"Individual usage",id:"individual-usage",level:3}],l={toc:p};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Each api rules can be used in a ",(0,i.kt)("a",{parentName:"p",href:"#chainable-usage"},(0,i.kt)("strong",{parentName:"a"},"chainable"))," or ",(0,i.kt)("a",{parentName:"p",href:"#individual-usage"},(0,i.kt)("strong",{parentName:"a"},"individual"))," way."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Currently, ",(0,i.kt)("inlineCode",{parentName:"p"},"ng add")," does not provide a way to choose which project you want a schematic to be used on.",(0,i.kt)("br",null),"\nTo provide such an option you will have to declare the following ",(0,i.kt)("inlineCode",{parentName:"p"},"project")," property, inside your ",(0,i.kt)("inlineCode",{parentName:"p"},"schema.json")," file:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"project": {\n  "type": "string",\n  "description": "The name of the project.",\n  "$default": {\n    "$source": "projectName"\n  }\n}\n')),(0,i.kt)("p",{parentName:"div"},"Users will then be able to provide a ",(0,i.kt)("inlineCode",{parentName:"p"},"project")," along your schematic installation:",(0,i.kt)("br",null),"\n",(0,i.kt)("em",{parentName:"p"},"(and if they do not, the default provider will populate the project option based on the inferred project from the cwd)")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"ng add YourSchematic --project ProjectName\n")))),(0,i.kt)("h3",{id:"chainable-usage"},"Chainable usage"),(0,i.kt)("h4",{id:"workspace"},(0,i.kt)("inlineCode",{parentName:"h4"},"Workspace")),(0,i.kt)("p",null,"Allow you to act at the ",(0,i.kt)("em",{parentName:"p"},"workspace")," level."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6-10}","{6-10}":!0},"import { schematic, workspace } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    workspace()\n      .spawn('ng', ['add', '@angular/material', '--skip-confirmation'])\n      .addPackageJsonDevDependencies(['eslint'])\n      .packageInstallTask()\n      .toRule()\n  ], options);\n")),(0,i.kt)("h4",{id:"application"},(0,i.kt)("inlineCode",{parentName:"h4"},"Application")),(0,i.kt)("p",null,"Allow you to act at a ",(0,i.kt)("em",{parentName:"p"},"project")," level and make sure the specified project is an ",(0,i.kt)("em",{parentName:"p"},"application"),"."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"__SRC__")," will be interpolated with the project ",(0,i.kt)("strong",{parentName:"p"},"sourceRoot")," specified in the ",(0,i.kt)("strong",{parentName:"p"},"angular.json")," file."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6-14}","{6-14}":!0},"import { application, ChainableProjectContext, createOrUpdateFile, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    application(options.project)\n      .addImportToFile('__SRC__/main.ts', 'environment', './environments/environment')\n      .rule(({ project }: ChainableProjectContext) => {\n        return createOrUpdateFile(project.pathFromRoot('README.md'), project.name);\n      })\n      .isAngularVersion('<= 11', () => {\n        ...\n      })\n      .toRule()\n  ], options);\n")),(0,i.kt)("h4",{id:"library"},(0,i.kt)("inlineCode",{parentName:"h4"},"Library")),(0,i.kt)("p",null,"Allow you to act at a ",(0,i.kt)("em",{parentName:"p"},"project")," level and make sure the specified project is a ",(0,i.kt)("em",{parentName:"p"},"library"),"."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"__SRC__")," will be interpolated with the project ",(0,i.kt)("strong",{parentName:"p"},"sourceRoot")," specified in the ",(0,i.kt)("strong",{parentName:"p"},"angular.json")," file."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6-8}","{6-8}":!0},"import { library, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    library(options.project)\n      .downloadFile('https://my-cdn.com/icons/iconx.png', '__SRC__/assets/icons/icon.png')\n      .toRule()\n  ], options);\n")),(0,i.kt)("h3",{id:"individual-usage"},"Individual usage"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When used this way all the paths will be relative to the root of the workspace.",(0,i.kt)("br",null),"\nYou will have to make sure any modifications on a project are made in a generic way.",(0,i.kt)("br",null),"\nTo help you with that, the ",(0,i.kt)("a",{parentName:"p",href:"/apis/angular#getprojectfromworkspace"},"getProjectFromWorkspace()")," helper is a good start."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6,8,10,12-14,16-17}","{6,8,10,12-14,16-17}":!0},"import { addImportToFile, addPackageJsonDevDependencies, getProjectFromWorkspace, modifyJsonFile, packageInstallTask, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule, Tree } from '@angular-devkit/schematics';\n\nexport default async (options: any): Rule => {\n  async (tree: Tree): Promise<Rule> => {\n    const project = await getProjectFromWorkspace(tree, options.project);\n    return schematic('my-schematic', [\n      modifyJsonFile('tsconfig.json', ['compilerOptions', 'strict'], true),\n\n      addImportToFile(project.pathFromSourceRoot('main.ts'), 'environment', './environments/environment'),\n\n      (): Rule => {\n        ...\n      },\n\n      addPackageJsonDevDependencies(['eslint']),\n      packageInstallTask()\n    ], options);\n  }\n}\n")))}m.isMDXComponent=!0}}]);