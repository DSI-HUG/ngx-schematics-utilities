"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[651],{4137:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>u});var a=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(o),u=n,g=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return o?a.createElement(g,i(i({ref:t},p),{},{components:o})):a.createElement(g,i({ref:t},p))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var m=2;m<r;m++)i[m]=o[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},2198:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=o(7462),n=(o(7294),o(4137));const r={title:"Angular"},i=void 0,l={unversionedId:"apis/angular",id:"apis/angular",title:"Angular",description:"Rules",source:"@site/docs/apis/angular.md",sourceDirName:"apis",slug:"/apis/angular",permalink:"/ngx-schematics-utilities/apis/angular",draft:!1,editUrl:"https://github.com/dsi-hug/ngx-schematics-utilities/edit/main/docs/docs/apis/angular.md",tags:[],version:"current",frontMatter:{title:"Angular"},sidebar:"docs",previous:{title:"File",permalink:"/ngx-schematics-utilities/apis/file"},next:{title:"Package.json",permalink:"/ngx-schematics-utilities/apis/package-json"}},s={},m=[{value:"Rules",id:"rules",level:2},{value:"<code>ensureIsAngularWorkspace</code>",id:"ensureisangularworkspace",level:3},{value:"<code>ensureIsAngularProject</code>",id:"ensureisangularproject",level:3},{value:"<code>ensureIsAngularLibrary</code>",id:"ensureisangularlibrary",level:3},{value:"<code>isAngularVersion</code>",id:"isangularversion",level:3},{value:"<code>addAngularJsonAsset</code>",id:"addangularjsonasset",level:3},{value:"<code>removeAngularJsonAsset</code>",id:"removeangularjsonasset",level:3},{value:"<code>addAngularJsonStyle</code>",id:"addangularjsonstyle",level:3},{value:"<code>removeAngularJsonStyle</code>",id:"removeangularjsonstyle",level:3},{value:"<code>addAngularJsonScript</code>",id:"addangularjsonscript",level:3},{value:"<code>removeAngularJsonScript</code>",id:"removeangularjsonscript",level:3},{value:"<code>addDeclarationToNgModule</code>",id:"adddeclarationtongmodule",level:3},{value:"<code>removeDeclarationFromNgModule</code>",id:"removedeclarationfromngmodule",level:3},{value:"<code>addImportToNgModule</code>",id:"addimporttongmodule",level:3},{value:"<code>removeImportFromNgModule</code>",id:"removeimportfromngmodule",level:3},{value:"<code>addExportToNgModule</code>",id:"addexporttongmodule",level:3},{value:"<code>removeExportFromNgModule</code>",id:"removeexportfromngmodule",level:3},{value:"<code>addProviderToNgModule</code>",id:"addprovidertongmodule",level:3},{value:"<code>removeProviderFromNgModule</code>",id:"removeproviderfromngmodule",level:3},{value:"<code>addRouteDeclarationToNgModule</code>",id:"addroutedeclarationtongmodule",level:3},{value:"<code>addProviderToBootstrapApplication</code>",id:"addprovidertobootstrapapplication",level:3},{value:"<code>removeProviderFromBootstrapApplication</code>",id:"removeproviderfrombootstrapapplication",level:3},{value:"Helpers",id:"helpers",level:2},{value:"<code>getProjectOutputPath</code>",id:"getprojectoutputpath",level:3},{value:"<code>getProjectFromWorkspace</code>",id:"getprojectfromworkspace",level:3}],p={toc:m};function c(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"rules"},"Rules"),(0,n.kt)("h3",{id:"ensureisangularworkspace"},(0,n.kt)("inlineCode",{parentName:"h3"},"ensureIsAngularWorkspace")),(0,n.kt)("p",null,"Ensures that the workspace, where the schematic is currently running on, is actually an Angular workspace or throws an exception otherwise."),(0,n.kt)("admonition",{title:"Note",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The test is done by ensuring the existence of an ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { ensureIsAngularWorkspace, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    ensureIsAngularWorkspace()\n  ]);\n")),(0,n.kt)("h3",{id:"ensureisangularproject"},(0,n.kt)("inlineCode",{parentName:"h3"},"ensureIsAngularProject")),(0,n.kt)("p",null,"Ensures that a project is actually an Angular project or throws an exception otherwise."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { ensureIsAngularProject, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    ensureIsAngularProject('ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"ensureisangularlibrary"},(0,n.kt)("inlineCode",{parentName:"h3"},"ensureIsAngularLibrary")),(0,n.kt)("p",null,"Ensures that a project is actually an Angular library or throws an exception otherwise."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { ensureIsAngularLibrary, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    ensureIsAngularLibrary('ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"isangularversion"},(0,n.kt)("inlineCode",{parentName:"h3"},"isAngularVersion")),(0,n.kt)("p",null,"Executes a rule only if the current Angular version installed in the project satisfies a given range."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6-8}","{6-8}":!0},"import { isAngularVersion, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    isAngularVersion('<= 11', (): Rule => {\n      ...\n    })\n  ]);\n")),(0,n.kt)("h3",{id:"addangularjsonasset"},(0,n.kt)("inlineCode",{parentName:"h3"},"addAngularJsonAsset")),(0,n.kt)("p",null,"Adds a new asset to a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addAngularJsonAsset, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addAngularJsonAsset('src/manifest.webmanifest', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"removeangularjsonasset"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeAngularJsonAsset")),(0,n.kt)("p",null,"Removes an asset from a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeAngularJsonAsset, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeAngularJsonAsset('src/manifest.webmanifest', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"addangularjsonstyle"},(0,n.kt)("inlineCode",{parentName:"h3"},"addAngularJsonStyle")),(0,n.kt)("p",null,"Adds a new style to a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addAngularJsonStyle, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addAngularJsonStyle('src/assets/my-styles.css', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"removeangularjsonstyle"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeAngularJsonStyle")),(0,n.kt)("p",null,"Removes a style from a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeAngularJsonStyle, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeAngularJsonStyle('src/assets/my-styles.css', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"addangularjsonscript"},(0,n.kt)("inlineCode",{parentName:"h3"},"addAngularJsonScript")),(0,n.kt)("p",null,"Adds a new script to a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addAngularJsonScript, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addAngularJsonScript('src/my-script.js', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"removeangularjsonscript"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeAngularJsonScript")),(0,n.kt)("p",null,"Removes a script from a project ",(0,n.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," sections of the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeAngularJsonScript, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeAngularJsonScript('src/my-script.js', 'ProjectName')\n  ]);\n")),(0,n.kt)("h3",{id:"adddeclarationtongmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"addDeclarationToNgModule")),(0,n.kt)("p",null,"Inserts a declaration (ex. Component, Pipe, Directive) into an NgModule declarations and also imports that declaration."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addDeclarationToNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addDeclarationToNgModule('src/app/app.module.ts', 'TestComponent', './components/test')\n  ]);\n")),(0,n.kt)("h3",{id:"removedeclarationfromngmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeDeclarationFromNgModule")),(0,n.kt)("p",null,"Removes a declaration (ex. Component, Pipe, Directive) from an NgModule declarations."),(0,n.kt)("admonition",{title:"Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Use ",(0,n.kt)("a",{parentName:"p",href:"/apis/file#removeimportfromfile"},"#removeImportFromFile")," to also remove the import.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeDeclarationFromNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeDeclarationFromNgModule('src/app/app.module.ts', 'AppComponent')\n  ]);\n")),(0,n.kt)("h3",{id:"addimporttongmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"addImportToNgModule")),(0,n.kt)("p",null,"Inserts an import (ex. NgModule) into an NgModule imports and also imports that import."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8,11-19}","{8,11-19}":!0},"import { addImportToNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\nimport { tags } from '@angular-devkit/core';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    // Import simple module\n    addImportToNgModule('src/app/app.module.ts', 'HttpClientModule', '@angular/common/http'),\n\n    // Import forRoot module\n    addImportToNgModule(\n      'src/app/app.module.ts',\n      tags.stripIndent`\n        TestModule.forRoot({\n          enabled: environment.production\n        })\n      `,\n      'src/common/test'\n    )\n  ]);\n")),(0,n.kt)("h3",{id:"removeimportfromngmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeImportFromNgModule")),(0,n.kt)("p",null,"Removes an import (ex. NgModule) from an NgModule imports."),(0,n.kt)("admonition",{title:"Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Use ",(0,n.kt)("a",{parentName:"p",href:"/apis/file#removeimportfromfile"},"#removeImportFromFile")," to also remove the import.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeImportFromNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeImportFromNgModule('src/app/app.module.ts', 'TestModule')\n  ]);\n")),(0,n.kt)("h3",{id:"addexporttongmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"addExportToNgModule")),(0,n.kt)("p",null,"Inserts an export (ex. Component, Pipe, Directive) into an NgModule exports and also imports that export."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addExportToNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addExportToNgModule('src/app/app.module.ts', 'TestComponent', './components/test')\n  ]);\n")),(0,n.kt)("h3",{id:"removeexportfromngmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeExportFromNgModule")),(0,n.kt)("p",null,"Removes an export (ex. Component, Pipe, Directive) from an NgModule exports."),(0,n.kt)("admonition",{title:"Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Use ",(0,n.kt)("a",{parentName:"p",href:"/apis/file#removeimportfromfile"},"#removeImportFromFile")," to also remove the import.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeExportFromNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeExportFromNgModule('src/app/app.module.ts', 'TestComponent')\n  ]);\n")),(0,n.kt)("h3",{id:"addprovidertongmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"addProviderToNgModule")),(0,n.kt)("p",null,"Inserts a provider (ex. Service) into an NgModule providers and also imports that provider."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { addExportToNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    addProviderToNgModule('src/app/app.module.ts', 'TestService', './services/test')\n  ]);\n")),(0,n.kt)("h3",{id:"removeproviderfromngmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeProviderFromNgModule")),(0,n.kt)("p",null,"Removes a provider (ex. Service) from an NgModule providers."),(0,n.kt)("admonition",{title:"Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Use ",(0,n.kt)("a",{parentName:"p",href:"/apis/file#removeimportfromfile"},"#removeImportFromFile")," to also remove the import.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeProviderFromNgModule, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeProviderFromNgModule('src/app/app.module.ts', 'TestService')\n  ]);\n")),(0,n.kt)("h3",{id:"addroutedeclarationtongmodule"},(0,n.kt)("inlineCode",{parentName:"h3"},"addRouteDeclarationToNgModule")),(0,n.kt)("p",null,"Inserts a route declaration to a router module (i.e. as a RouterModule declaration)."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{10,14}","{10,14}":!0},"import { addRouteDeclarationToNgModule, addImportToFile, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule => {\n  const componentRoute = \"{ path: 'home', component: HomeComponent }\";\n  const lazyRoute = \"{ path: 'user', loadChildren: '() => import('./pages/user/user.module').then(m => m.UserModule)'; }\";\n\n  return schematic('my-schematic', [\n    // Add component route\n    addRouteDeclarationToNgModule('src/app/app-routing.module.ts', componentRoute),\n    addImportToFile('src/app/app-routing.module.ts', 'HomeComponent', './pages/home/home.component'),\n\n    // Add lazy route\n    addRouteDeclarationToNgModule('src/app/app-routing.module.ts', lazyRoute)\n  ]);\n}\n")),(0,n.kt)("h3",{id:"addprovidertobootstrapapplication"},(0,n.kt)("inlineCode",{parentName:"h3"},"addProviderToBootstrapApplication")),(0,n.kt)("p",null,"Inserts a provider (ex. provideRouter) into a bootstrapApplication's providers and also imports that provider."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8,11-19}","{8,11-19}":!0},"import { addProviderToBootstrapApplication, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\nimport { tags } from '@angular-devkit/core';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    // Add simple module\n    addProviderToBootstrapApplication('src/main.ts', 'provideAnimations()', '@angular/platform-browser/animations'),\n\n    // Add module to `importProvidersFrom`\n    addProviderToBootstrapApplication('src/main.ts', 'MyModule', 'path/to/my/module', true),\n\n    // Add module with parameters\n    addProviderToBootstrapApplication(\n      'src/main.ts',\n      tags.stripIndent`\n        provideRouter(appRoutes,\n          withDebugTracing()\n        )\n      `,\n      '@angular/router'\n    )\n  ]);\n")),(0,n.kt)("h3",{id:"removeproviderfrombootstrapapplication"},(0,n.kt)("inlineCode",{parentName:"h3"},"removeProviderFromBootstrapApplication")),(0,n.kt)("p",null,"Removes a provider (ex. provideRouter) from a bootstrapApplication's providers."),(0,n.kt)("admonition",{title:"Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Use ",(0,n.kt)("a",{parentName:"p",href:"/apis/file#removeimportfromfile"},"#removeImportFromFile")," to also remove the import.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { removeProviderFromBootstrapApplication, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  schematic('my-schematic', [\n    removeProviderFromBootstrapApplication('src/main.ts', 'provideRouter')\n  ]);\n")),(0,n.kt)("h2",{id:"helpers"},"Helpers"),(0,n.kt)("h3",{id:"getprojectoutputpath"},(0,n.kt)("inlineCode",{parentName:"h3"},"getProjectOutputPath")),(0,n.kt)("p",null,"Gets a project output path as defined in the ",(0,n.kt)("inlineCode",{parentName:"p"},"angular.json")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { getProjectOutputPath, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule, Tree } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  (tree: Tree): Rule => {\n    const projectOutputPath = getProjectOutputPath(tree, 'ProjectName');\n    return schematic('my-schematic', [\n      ...\n    ]);\n  };\n")),(0,n.kt)("h3",{id:"getprojectfromworkspace"},(0,n.kt)("inlineCode",{parentName:"h3"},"getProjectFromWorkspace")),(0,n.kt)("p",null,"Gets a project definition object from the current Angular workspace."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"import { getProjectFromWorkspace, schematic } from '@hug/ngx-schematics-utilities';\nimport { Rule, Tree } from '@angular-devkit/schematics';\n\nexport default (options: any): Rule =>\n  async (tree: Tree): Promise<Rule> => {\n    const project = await getProjectFromWorkspace(tree, 'ProjectName');\n    return schematic('my-schematic', [\n      ...\n    ]);\n  };\n")))}c.isMDXComponent=!0}}]);